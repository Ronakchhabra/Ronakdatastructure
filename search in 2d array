1st approch(brute force
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int c= matrix[0].size();
        int r = matrix.size();
        for(int i = 0 ; i< r ; i++)
        {
            for(int j= 0; j<c ; j++)
            {
                if(matrix[i][j]== target)
                {
                    return true;
                }
            }
        }
        return false;
    }
};
2nd approch optimized approch
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row = matrix.size();
        int col = matrix[0].size();
        
        int start=0;
        int end = row*col - 1;
        
        int mid = start + (end - start)/2;
        
        while(start<=end)
        {
            int element = matrix[mid/col][mid%col];   // mid / col gives i and mid % col gives j for arr[i][j]
            if(target == element)
            {
                return 1;
            }
            
            else if (target > element)
            {
                start = mid + 1;
            }
            
            else
            {
                end = mid - 1;
            }
             mid = start + (end - start)/2;
        }
        
        
        return 0;
    }
};
